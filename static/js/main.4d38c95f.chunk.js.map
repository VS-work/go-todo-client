{"version":3,"sources":["connection/index.js","editForm.js","dataTable.js","appLayout.js","index.js"],"names":["require","config","baseUrl","process","console","log","axiosInstance","axios","create","baseURL","headers","EditForm","Form","name","props","form","useEffect","submitFlag","validateFields","err","values","handleEditOk","resetFields","getFieldDecorator","Item","rules","required","message","placeholder","DataTable","useState","editVisible","setEditVisible","confirmEditLoading","setSubmitFlag","columns","setColumns","data","setData","deleteRequest","setDeleteRequest","completeRequest","setCompleteRequest","priorityRequest","setPriorityRequest","priorities","rowid","a","async","delete","rows","filter","record","key","index","findIndex","r","newData","Object","assign","completed","put","map","desc","priority","e","target","value","title","dataIndex","render","text","Group","defaultValue","onChange","handleChangePriority","Button","type","onClick","color","onConfirm","row","style","margin","dataSource","pagination","scroll","y","visible","onOk","confirmLoading","onCancel","formData","post","res","newRecord","Content","Layout","AppLayout","loading","setLoading","get","content","tip","padding","background","textAlign","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d38c95f.chunk.js","sourcesContent":["import axios from 'axios';\n\nrequire('dotenv').config();\n\nexport const baseUrl = process.env.REACT_APP_API_URL;\n\nconsole.log(111, baseUrl, process.env);\n\nexport const axiosInstance = axios.create({\n  baseURL: baseUrl,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n","import React, { useEffect, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Spin, Form, Input } from 'antd';\n// import { axiosInstance, axiosAuthInstance } from \"./connection\";\n\nfunction EditFormSrc(props) {\n  const { form } = props;\n\n  useEffect(() => {\n    if (props.submitFlag === 0) {\n      return;\n    }\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      props.handleEditOk(values);\n      form.resetFields();\n    });\n  }, [props.submitFlag]);\n\n  const { getFieldDecorator } = props.form;\n\n  return (\n    <Form>\n      <Form.Item>\n        {getFieldDecorator('content', {\n          rules: [{ required: true, message: 'Please input content!' }],\n        })(\n          <Input\n            placeholder=\"Content\"\n          />,\n        )}\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport const EditForm = Form.create({ name: 'editData' })(EditFormSrc);\n","import React, { useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Button, Modal, Popconfirm, Tag, Radio } from 'antd';\nimport { axiosInstance } from \"./connection\";\nimport { EditForm } from \"./editForm\";\n\nexport function DataTable(props) {\n  const [editVisible, setEditVisible] = useState(false);\n  const [confirmEditLoading] = useState(false);\n  const [submitFlag, setSubmitFlag] = useState(0);\n  const [columns, setColumns] = useState();\n  const [data, setData] = useState();\n  const [deleteRequest, setDeleteRequest] = useState(0);\n  const [completeRequest, setCompleteRequest] = useState(0);\n  const [priorityRequest, setPriorityRequest] = useState(null);\n\n  const priorities = [\"Normal\", \"Low\", \"High\"];\n\n  const handleDelete = rowid => setDeleteRequest(rowid);\n  const handleComplete = rowid => setCompleteRequest(rowid);\n  const handleChangePriority = (e, rowid) => setPriorityRequest({ e, rowid });\n  const doDelete = rowid => {\n    if (deleteRequest > 0) {\n      (async () => {\n        await axiosInstance.delete(`todo/${rowid}`);\n        let rows = [...data.filter(record => record.key !== rowid)];\n        setData(rows);\n      })();\n    }\n  };\n  const doComplete = rowid => {\n    if (completeRequest > 0) {\n      (async () => {\n        const index = data.findIndex(r => r.rowid === rowid);\n        const newData = Object.assign({}, data[index]);\n        newData.completed = 1;\n        await axiosInstance.put(`todo/${rowid}`, newData);\n        setData(data.map(r => r.rowid === rowid ? newData : r));\n      })();\n    }\n  };\n  const doChangePriority = (desc) => {\n    if (desc !== null) {\n      (async () => {\n        const index = data.findIndex(r => r.rowid === desc.rowid);\n        const newData = Object.assign({}, data[index]);\n        newData.priority = desc.e.target.value;\n        await axiosInstance.put(`todo/${desc.rowid}`, newData);\n        setData(data.map(r => r.rowid === desc.rowid ? newData : r));\n      })();\n    }\n  };\n\n  useEffect(() => doDelete(deleteRequest), [deleteRequest]);\n  useEffect(() => doComplete(completeRequest), [completeRequest]);\n  useEffect(() => doChangePriority(priorityRequest), [priorityRequest]);\n\n  useEffect(() => {\n    if (props.data) {\n      const columns = [\n        {\n          title: 'Content',\n          dataIndex: 'content',\n          key: 'content',\n        },\n        {\n          title: 'Priority',\n          dataIndex: 'priority',\n          render: (text, record) => (\n            record.completed != 0 ? (\n              <div>{priorities[record.priority]}</div>\n            ) :\n              (\n                <Radio.Group defaultValue={record.priority} onChange={(e) => handleChangePriority(e, record.key)} >\n                  <Radio.Button value={1}>Low</Radio.Button>\n                  <Radio.Button value={0}>Normal</Radio.Button>\n                  <Radio.Button value={2}>High</Radio.Button>\n                </Radio.Group>\n              )\n          ),\n        },\n        {\n          title: 'Status',\n          dataIndex: 'completed',\n          render: (text, record) => (\n            text == \"0\" ? (\n              <Button type=\"primary\" onClick={() => handleComplete(record.key)}>Complete</Button>\n            ) : (\n                <Tag color={'blue'}>Completed</Tag>\n              )\n          )\n        },\n        {\n          title: '...',\n          dataIndex: 'operation',\n          render: (text, record) =>\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n              <a>Delete</a>\n            </Popconfirm>\n        }\n      ];\n      setColumns(columns);\n      const data = props.data.map(row => ({ ...row, key: row.rowid }));\n      setData(data);\n    }\n  }, [props.data]);\n\n  const doEditOk = () => {\n    setSubmitFlag(submitFlag + 1);\n  };\n\n  const handleEditOk = (formData) => {\n    (async () => {\n      const res = await axiosInstance.post(`todo`, formData);\n      const newRecord = res.data;\n      newRecord.key = newRecord.rowid;\n      setData([newRecord, ...data]);\n      setEditVisible(false);\n    })();\n  };\n\n  const handleEditCancel = () => {\n    setEditVisible(false);\n  };\n  const addNewRow = () => setEditVisible(true);\n\n  return (\n    !columns ? (<></>) :\n      <div>\n        <Button onClick={addNewRow} type=\"primary\" style={{ margin: 10 }}>Add new Todo</Button>\n        <Table\n          columns={columns}\n          dataSource={data}\n          pagination={false}\n          scroll={{ y: 240 }} />\n        <Modal\n          title=\"New Todo\"\n          visible={editVisible}\n          onOk={doEditOk}\n          confirmLoading={confirmEditLoading}\n          onCancel={handleEditCancel}\n        >\n          <EditForm submitFlag={submitFlag} handleEditOk={handleEditOk}></EditForm>\n        </Modal>\n      </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Spin } from 'antd';\nimport { axiosInstance } from \"./connection\";\nimport { DataTable } from './dataTable';\n\nconst { Content } = Layout;\n\nexport function AppLayout() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const content = await axiosInstance.get(`todos`);\n      setData(content.data);\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    loading ? (\n      <Spin tip=\"Loading...\"></Spin>\n    ) : (\n        <Layout>\n            <Content>\n              <div style={{ padding: 24, background: '#fff', textAlign: 'center' }}>\n                <DataTable data={data}></DataTable>\n              </div>\n            </Content>\n        </Layout>\n      )\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { AppLayout } from './appLayout';\n\nconst Root = () => {\n  return (\n    <AppLayout></AppLayout>\n  );\n}\n\nReactDOM.render(Root(), document.getElementById('root'));\n"],"sourceRoot":""}